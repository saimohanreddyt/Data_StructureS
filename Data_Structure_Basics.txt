

                                               Data Structure
                                              ------------------
In computer science, a data structure is a data organization, management, and storage format that enables efficient access and modification. More precisely, a data structure is a collection of data values, the relationships among 
them, and the functions or operations that can be applied to the data



=>> In computer science, a list or sequence is an abstarct data type that represents a countable number of ordered values, where the same value may occur more than once.


=>push -> which adds an element to the collection, and
=>pop  -> which removes the most recently added element that was not yet removed.


Data Types : A set of values together with operations (specified as input-output behavior) 
--------Example: integer, date, string, complex number, person, employee, department, paragraph, bond, image, set, bag, vector, list, stack, queue, deque, priority queue, ring, dictionary, tree, graph
        --------
=>Primitive: basic building block (boolean, integer, float, char etc.)
=>Composite: any data type (struct, array, string etc.) composed of primitives or composite types.
=>Abstract: data type that is defined by its behaviour (tuple, set, stack, queue, graph etc).



Abstract Data Type :  
--------------------
--------------------

	- List  :A linked list is a sequence of data structures, which are connected together via links. Linked List is a sequence of links which contains items. Each link contains a connection to another link. Linked list is the 
	--------		second most-used data structure after array.
	
	- Stack :Stack is a linear data structure which follows a particular order in which the operations are performed. The order may be LIFO(Last In First Out) or FILO(First In Last Out).
	--------

	- Queue :A Queue is a linear structure which follows a particular order in which the operations are performed. The order is First In First Out (FIFO). A good example of a queue is any queue of consumers for a resource where 
	--------		the consumer that came first is served first. The difference between stacks and queues is in removing. In a stack we remove the item the most recently added; in a queue, we remove the item the least 
				recently added.
	
	- Map   :The map data type is known as an associative array because like an array, it is a collection of values, and not a single value like an Int or a String. Also, each unique key is associated with a value, making it an 
	--------		associative array



Arryas : An array is a collection of items stored at contiguous memory locations. The idea is to store multiple items of the same type together. This makes it easier to calculate the position of each element by simply adding 
--------	an offset to a base value, i.e., the memory location of the first element of the array (generally denoted by the name of the array).

		e.x: int x[] = 5,3,4,2
		
		Advantages:
		-----------
		1. It is used to represent multiple data items of same type by using only single name.
		2. It can be used to implement other data structures like linked lists, stacks, queues, trees, graphs etc.
		3. 2D arrays are used to represent matrices.

		Disadvantages:
		--------------
		1. We must know in advance that how many elements are to be stored in array.
		2. Array is static structure. It means that array is of fixed size. The memory which is allocated to array can not be increased or reduced.
		3. Since array is of fixed size, if we allocate more memory than requirement then the memory space will be wasted. And if we allocate less memory than requirement, then it will create problem.
		4. The elements of array are stored in consecutive memory locations. So insertions and deletions are very difficult and time consuming.


LinkidList : In computer science, a linked list is a linear collection of data elements whose order is not given by their physical placement in memory. Instead, each element points to the next. It is a data structure consisting of a
------------		 collection of nodes which together represent a sequence.



		Advantages of linked lists

		    Linked lists are a dynamic data structure, allocating the needed memory while the program is running.
		    Insertion and deletion node operations are easily implemented in a linked list.
		    Linear data structures such as stacks and queues are easily implemented with a linked list.
		    They can reduce access time and may expand in real time without memory overhead.

		Disadvantages of linked lists

		    They have a tendency to use more memory due to pointers requiring extra storage space.
		    Nodes in a linked list must be read in order from the beginning as linked lists are inherently sequential access.
		    Nodes are stored incontiguously, greatly increasing the time required to access individual elements within the list.
		    Difficulties arise in linked lists when it comes to reverse traversing. For instance, singly linked lists are cumbersome to navigate backwards and while doubly linked lists are somewhat easier to read, memory is wasted in allocating space for a back pointer.

